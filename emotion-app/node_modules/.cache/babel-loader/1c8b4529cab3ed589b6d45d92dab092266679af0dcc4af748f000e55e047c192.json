{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhchauhan/pyth/test folder/parent/emotion-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [emotionResult, setEmotionResult] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Response from server:', response.data);\n      setEmotionResult(response.data.emotion_label);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    console.log('Emotion Result in useEffect:', emotionResult);\n  }, [emotionResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      backgroundColor: '#f0f0f0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '20px',\n        color: '#333'\n      },\n      children: \"Image Upload with React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        backgroundColor: '#61dafb',\n        color: '#fff',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), emotionResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '18px',\n        color: '#333'\n      },\n      children: [\"The predicted emotion is: \", emotionResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lpW4yCDChlhkFeAJIQjCtwi8Sfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","emotionResult","setEmotionResult","handleFileChange","event","target","files","handleSubmit","formData","FormData","append","response","post","headers","console","log","data","emotion_label","error","style","display","flexDirection","alignItems","justifyContent","height","backgroundColor","children","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","padding","borderRadius","cursor","marginTop","fontSize","_c","$RefreshReg$"],"sources":["/Users/rishabhchauhan/pyth/test folder/parent/emotion-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [emotionResult, setEmotionResult] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n  \n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n  \n      console.log('Response from server:', response.data);\n  \n      setEmotionResult(response.data.emotion_label);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Emotion Result in useEffect:', emotionResult);\n  }, [emotionResult]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', backgroundColor: '#f0f0f0' }}>\n      <h1 style={{ marginBottom: '20px', color: '#333' }}>Image Upload with React</h1>\n      <input type=\"file\" onChange={handleFileChange} style={{ marginBottom: '20px' }} />\n      <button onClick={handleSubmit} style={{ backgroundColor: '#61dafb', color: '#fff', padding: '10px 20px', borderRadius: '5px', cursor: 'pointer' }}>Upload and Process</button>\n      {emotionResult && <p style={{ marginTop: '20px', fontSize: '18px', color: '#333' }}>The predicted emotion is: {emotionResult}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}