{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhchauhan/pyth/test folder/parent/emotion-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [emotionResult, setEmotionResult] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Response from server:', response.data);\n      setEmotionResult(response.data.emotion_label);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Upload with React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), console.log('Rendered with emotionResult:', emotionResult), emotionResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The predicted emotion is: \", emotionResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yc/iInKX/SHJPfKdZUP8D96Pmnk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","emotionResult","setEmotionResult","handleFileChange","event","target","files","handleSubmit","formData","FormData","append","response","post","headers","console","log","data","emotion_label","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhchauhan/pyth/test folder/parent/emotion-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [emotionResult, setEmotionResult] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    \n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n  \n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n  \n      console.log('Response from server:', response.data);\n  \n      setEmotionResult(response.data.emotion_label);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Image Upload with React</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleSubmit}>Upload and Process</button>\n      {console.log('Rendered with emotionResult:', emotionResult)}\n      {emotionResult && <p>The predicted emotion is: {emotionResult}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAE/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;MAErC,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QAC/EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAEnDd,gBAAgB,CAACS,QAAQ,CAACK,IAAI,CAACC,aAAa,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD3B,OAAA;MAAQ8B,OAAO,EAAEnB,YAAa;MAAAY,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzDT,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEd,aAAa,CAAC,EAC1DA,aAAa,iBAAIL,OAAA;MAAAuB,QAAA,GAAG,4BAA0B,EAAClB,aAAa;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}